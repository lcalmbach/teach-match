# Generated by Django 5.0.6 on 2024-06-30 06:40

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("school_management", "0045_person_user_person_username"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommunicationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Beschreibung"),
                ),
            ],
            options={
                "verbose_name": "Kommunikationsart",
                "verbose_name_plural": "Kommunikationsarten",
                "ordering": ["name"],
            },
        ),
        migrations.AlterField(
            model_name="person",
            name="school",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="school_persons",
                to="school_management.school",
            ),
        ),
        migrations.CreateModel(
            name="Communication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sent_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Gesendet am"
                    ),
                ),
                (
                    "application_text",
                    models.TextField(blank=True, max_length=500, verbose_name="Text"),
                ),
                (
                    "answer_text",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Antwort"
                    ),
                ),
                (
                    "answer_date",
                    models.DateField(blank=True, null=True, verbose_name="Antwort am"),
                ),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidate",
                        to="school_management.candidate",
                    ),
                ),
                (
                    "substitution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="substitution",
                        to="school_management.candidate",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_type",
                        to="school_management.communicationtype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Application",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("school_management.communication",),
        ),
        migrations.CreateModel(
            name="Invitation",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("school_management.communication",),
        ),
    ]
